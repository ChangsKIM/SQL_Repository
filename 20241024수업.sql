-- PL/SQL
-- 데이터 베이스에서 사용되는 절차적 언어
-- 프로시저, 함수, 트리거 등의 형태로 작성을 할 수 있음
-- 데이터 조작 및 비지니스 로직을 데이터베이스 내에서 직접 처리 할 수 있음

-- 함수
CREATE OR REPLACE FUNCTION GET_ODD_EVEN(N IN NUMBER)
RETURN VARCHAR2 IS 
	-- 함수에서 사용할 변수를 선언하는 영역
	MSG VARCHAR2(100);
BEGIN 
	-- 실행하는 영역
	IF N = 0	THEN
		MSG := '0 입니다.';
	ELSIF MOD(N, 2) = 0 THEN
		MSG := '짝수입니다.';
	ELSE
		MSG := '홀수입니다.';
	END IF;
	RETURN MSG;
END;

SELECT 
	GET_ODD_EVEN(5), 
	GET_ODD_EVEN(15),
	GET_ODD_EVEN(20),
	GET_ODD_EVEN(87) 
FROM DUAL;


-- 실습문제
CREATE OR REPLACE FUNCTION GET_SCORE_GRADE(SCORE IN NUMBER)
RETURN VARCHAR2
IS
	MSG VARCHAR2(100);
BEGIN 
	IF SCORE >= 95 AND 91 >= SCORE THEN
		MSG := 'A+';
	ELSIF SCORE >= 90 THEN
		MSG := 'A';
	ELSIF SCORE >= 85 THEN
		MSG := 'B+';
	ELSIF SCORE >= 80 THEN
		MSG := 'B';
	ELSIF SCORE >= 75 THEN
		MSG := 'C+';
	ELSIF SCORE >= 70 THEN
		MSG := 'C';
	ELSIF SCORE >= 65 THEN
		MSG := 'D+';
	ELSIF SCORE >= 60 THEN
		MSG := 'D'; 
	ELSE
		MSG := 'F';		
	END IF;
	RETURN MSG;
END;


SELECT 
	GET_SCORE_GRADE(96) AS 학생01,
	GET_SCORE_GRADE(72) AS 학생02,
	GET_SCORE_GRADE(83) AS 학생03,
	GET_SCORE_GRADE(55) AS 학생04,
	GET_SCORE_GRADE(61) AS 학생05
	FROM dual;
	









